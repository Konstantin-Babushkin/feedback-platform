@use "sass:map";
@use "sass:math";

// Colors
$colors: (
  'primary': (
    'base': #3b82f6,
    'hover': #2563eb,
    'light': #60a5fa,
    'dark': #1d4ed8
  ),
  'neutral': (
    'white': #ffffff,
    'gray-50': #f8fafc,
    'gray-100': #f1f5f9,
    'gray-200': #e2e8f0,
    'gray-300': #cbd5e1,
    'gray-400': #94a3b8,
    'gray-500': #64748b,
    'gray-600': #475569,
    'gray-700': #334155,
    'gray-800': #1e293b,
    'gray-900': #0f172a,
    'black': #000000
  ),
  'success': (
    'base': #22c55e,
    'hover': #16a34a
  ),
  'error': (
    'base': #ef4444,
    'hover': #dc2626
  ),
  'warning': (
    'base': #f59e0b,
    'hover': #d97706
  )
);

// Typography
$font-family-base: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
$font-size-base: 16px;
$line-height-base: 1.5;

$font-sizes: (
  'xs': 0.75rem,    // 12px
  'sm': 0.875rem,   // 14px
  'base': 1rem,     // 16px
  'lg': 1.125rem,   // 18px
  'xl': 1.25rem,    // 20px
  '2xl': 1.5rem,    // 24px
  '3xl': 1.875rem,  // 30px
  '4xl': 2.25rem    // 36px
);

$font-weights: (
  'normal': 400,
  'medium': 500,
  'semibold': 600,
  'bold': 700
);

// Spacing
$spacing-unit: 0.25rem;
$spacing: (
  '0': 0,
  '1': $spacing-unit,
  '2': $spacing-unit * 2,
  '3': $spacing-unit * 3,
  '4': $spacing-unit * 4,
  '5': $spacing-unit * 5,
  '6': $spacing-unit * 6,
  '8': $spacing-unit * 8,
  '10': $spacing-unit * 10,
  '12': $spacing-unit * 12,
  '16': $spacing-unit * 16
);

// Border radius
$border-radius: (
  'none': 0,
  'sm': 0.125rem,
  'base': 0.25rem,
  'md': 0.375rem,
  'lg': 0.5rem,
  'xl': 0.75rem,
  '2xl': 1rem,
  'full': 9999px
);

// Shadows
$shadows: (
  'sm': (0 1px 2px 0 rgba(0, 0, 0, 0.05)),
  'base': (0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)),
  'md': (0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)),
  'lg': (0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)),
  'xl': (0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04))
);

// Breakpoints
$breakpoints: (
  'sm': 640px,
  'md': 768px,
  'lg': 1024px,
  'xl': 1280px,
  '2xl': 1536px
);

// Transitions
$transition-base: all 0.2s ease-in-out;
$transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);

// Z-index
$z-index: (
  'dropdown': 1000,
  'sticky': 1020,
  'fixed': 1030,
  'modal-backdrop': 1040,
  'modal': 1050,
  'popover': 1060,
  'tooltip': 1070
);

// Mixins
@mixin respond-to($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    @media (min-width: map.get($breakpoints, $breakpoint)) {
      @content;
    }
  }
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin primary-button {
  display: block;
  max-width: 200px;
  padding: map.get($spacing, '3') map.get($spacing, '6');
  background-color: map.get(map.get($colors, 'primary'), 'base');
  color: map.get(map.get($colors, 'neutral'), 'white');
  border: none;
  border-radius: map.get($border-radius, 'lg');
  font-size: map.get($font-sizes, 'base');
  font-weight: map.get($font-weights, 'medium');
  cursor: pointer;
  transition: $transition-base;

  &:hover {
    background-color: map.get(map.get($colors, 'primary'), 'hover');
  }
}

@mixin error-button {
  @include primary-button;
  background-color: map.get(map.get($colors, 'error'), 'base');

  &:hover {
    background-color: map.get(map.get($colors, 'error'), 'hover');
  }
}

@mixin status-badge {
  padding: map.get($spacing, '1') map.get($spacing, '2');
  border-radius: map.get($border-radius, 'sm');
  font-size: map.get($font-sizes, 'sm');
  font-weight: map.get($font-weights, 'medium');
  text-transform: uppercase;
  letter-spacing: 0.05em;

  &--open {
    background-color: map.get(map.get($colors, 'success'), 'base');
    color: map.get(map.get($colors, 'neutral'), 'white');
  }

  &--closed {
    background-color: map.get(map.get($colors, 'error'), 'base');
    color: map.get(map.get($colors, 'neutral'), 'white');
  }
}

@mixin value-text {
  font-size: map.get($font-sizes, 'lg');
  color: map.get(map.get($colors, 'neutral'), 'gray-700');

  strong {
    color: map.get(map.get($colors, 'neutral'), 'gray-800');
    font-weight: map.get($font-weights, 'semibold');
  }
}

@mixin label-text {
  font-size: map.get($font-sizes, 'sm');
  color: map.get(map.get($colors, 'neutral'), 'gray-600');
}

@mixin info-text {
  display: flex;
  width: 100%;
  justify-content: space-between;
  font-size: map.get($font-sizes, 'sm');
  color: map.get(map.get($colors, 'neutral'), 'gray-600');

  &_responses-count {
    font-weight: map.get($font-weights, 'medium');
  }

  &_time {
    color: map.get(map.get($colors, 'neutral'), 'gray-500');
  }
}

@mixin date-text {
  font-size: map.get($font-sizes, 'sm');
  color: map.get(map.get($colors, 'neutral'), 'gray-500');
}

@mixin responses-text {
  font-size: map.get($font-sizes, 'sm');
  color: map.get(map.get($colors, 'neutral'), 'gray-600');
  font-weight: map.get($font-weights, 'medium');
}

@mixin summary-box {
  display: flex;
  flex-direction: column;
  gap: map.get($spacing, '2');
  padding: map.get($spacing, '4');
  background-color: map.get(map.get($colors, 'neutral'), 'gray-50');
  border-radius: map.get($border-radius, 'lg');
  border: 1px solid map.get(map.get($colors, 'neutral'), 'gray-200');

  strong {
    color: map.get(map.get($colors, 'neutral'), 'gray-800');
    font-weight: map.get($font-weights, 'semibold');
  }

  span {
    font-size: map.get($font-sizes, 'base');
    line-height: 1.5;
  }
}

@mixin loading-text {
  text-align: center;
  padding: map.get($spacing, '8');
  color: map.get(map.get($colors, 'neutral'), 'gray-500');
  font-size: map.get($font-sizes, 'lg');
}

// Base styles
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: $font-size-base;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: transparent;
}

body {
  font-family: $font-family-base;
  line-height: $line-height-base;
  color: map.get(map.get($colors, 'neutral'), 'gray-800');
  background-color: map.get(map.get($colors, 'neutral'), 'gray-50');
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

h1, h2, h3, h4, h5, h6 {
  margin-top: 0;
  margin-bottom: map.get($spacing, '4');
  font-weight: map.get($font-weights, 'semibold');
  line-height: 1.2;
}

p {
  margin-top: 0;
  margin-bottom: map.get($spacing, '4');
}

a {
  color: map.get(map.get($colors, 'primary'), 'base');
  text-decoration: none;
  transition: $transition-base;

  &:hover {
    color: map.get(map.get($colors, 'primary'), 'hover');
  }
}

button {
  cursor: pointer;
  border: none;
  background: none;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  color: inherit;
  padding: 0;
  margin: 0;
}

img {
  max-width: 100%;
  height: auto;
  vertical-align: middle;
}

// Utility classes
.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 map.get($spacing, '4');
}

.text-center {
  text-align: center;
}

.mt-0 { margin-top: map.get($spacing, '0'); }
.mt-1 { margin-top: map.get($spacing, '1'); }
.mt-2 { margin-top: map.get($spacing, '2'); }
.mt-3 { margin-top: map.get($spacing, '3'); }
.mt-4 { margin-top: map.get($spacing, '4'); }
.mt-5 { margin-top: map.get($spacing, '5'); }
.mt-6 { margin-top: map.get($spacing, '6'); }

.mb-0 { margin-bottom: map.get($spacing, '0'); }
.mb-1 { margin-bottom: map.get($spacing, '1'); }
.mb-2 { margin-bottom: map.get($spacing, '2'); }
.mb-3 { margin-bottom: map.get($spacing, '3'); }
.mb-4 { margin-bottom: map.get($spacing, '4'); }
.mb-5 { margin-bottom: map.get($spacing, '5'); }
.mb-6 { margin-bottom: map.get($spacing, '6'); }

.p-0 { padding: map.get($spacing, '0'); }
.p-1 { padding: map.get($spacing, '1'); }
.p-2 { padding: map.get($spacing, '2'); }
.p-3 { padding: map.get($spacing, '3'); }
.p-4 { padding: map.get($spacing, '4'); }
.p-5 { padding: map.get($spacing, '5'); }
.p-6 { padding: map.get($spacing, '6'); }

.rounded-none { border-radius: map.get($border-radius, 'none'); }
.rounded-sm { border-radius: map.get($border-radius, 'sm'); }
.rounded { border-radius: map.get($border-radius, 'base'); }
.rounded-md { border-radius: map.get($border-radius, 'md'); }
.rounded-lg { border-radius: map.get($border-radius, 'lg'); }
.rounded-xl { border-radius: map.get($border-radius, 'xl'); }
.rounded-2xl { border-radius: map.get($border-radius, '2xl'); }
.rounded-full { border-radius: map.get($border-radius, 'full'); }

.shadow-sm { box-shadow: map.get($shadows, 'sm'); }
.shadow { box-shadow: map.get($shadows, 'base'); }
.shadow-md { box-shadow: map.get($shadows, 'md'); }
.shadow-lg { box-shadow: map.get($shadows, 'lg'); }
.shadow-xl { box-shadow: map.get($shadows, 'xl'); } 